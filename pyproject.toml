[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]


[project]
name = "scvi-tools"
version = "1.0.0"
description = "Deep probabilistic analysis of single-cell omics data."
readme = "README.md"
requires-python = ">=3.9"
license = {file = "LICENSE"}
authors = [
    {name = "The scvi-tools development team"},
]
maintainers = [
    {name = "The scvi-tools development team", email = "adamgayoso@berkeley.edu"},
]
urls.Documentation = "https://scvi-tools.org"
urls.Source = "https://github.com/scverse/scvi-tools"
urls.Home-page = "https://scvi-tools.org"
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Science/Research",
  "Natural Language :: English",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Operating System :: MacOS :: MacOS X",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: POSIX :: Linux",
  "Topic :: Scientific/Engineering :: Bio-Informatics",
]
dependencies = [
    "anndata>=0.7.5",
    "chex",
    "docrep>=0.3.2",
    "flax",
    "jax>=0.4.4",
    "jaxlib>=0.4.3",
    "optax",
    "numpy>=1.17.0",
    "pandas>=1.0",
    "scipy",
    "scikit-learn>=0.21.2",
    "rich>=12.0.0",
    "h5py>=2.9.0",
    "torch>=1.8.0",
    "lightning>=2.0,<2.1",
    "torchmetrics>=0.11.0",
    "pyro-ppl>=1.6.0",
    "tqdm>=4.56.0",
    "scikit-learn>=0.21.2",
    "numpyro>=0.12.1",
    "ml-collections>=0.1.1",
    "mudata>=0.1.2",
    "sparse>=0.14.0",
    "xarray>=2023.2.0",
]


[project.optional-dependencies]
dev = [
    "black",
    "pytest",
    "pytest-cov",
    "flake8",
    "scanpy>=1.6",
    "loompy>=3.0.6",
    "jupyter",
    "nbformat",
    "nbconvert",
    "pre-commit",
    "ruff",
    "pymde",
    "genomepy",
    "cellxgene-census"
]
docs = [
  "sphinx>=4.1",
  "ipython",
  "sphinx-book-theme>=1.0.1",
  "sphinx_copybutton",
  "sphinx-design",
  "sphinxext-opengraph",
  "sphinx-hoverxref",
  "sphinxcontrib-bibtex>=1.0.0",
  "myst-parser",
  "myst-nb",
  "sphinx-autodoc-typehints",
]
autotune = [
  "hyperopt>=0.2",
  "ray[tune]>=2.2.0",
  "ipython",
  "scib-metrics>=0.3",
]
pymde = ["pymde"]
tutorials = ["scanpy", "leidenalg", "python-igraph", "loompy", "scikit-misc", "pynndescent", "pymde", "huggingface_hub", "genomepy"]
hub = ["huggingface_hub"]
regseq = [
    "biopython>=1.81",
    "genomepy",
]
census = ["cellxgene-census"]

[tool.hatch.build.targets.wheel]
packages = ['scvi']

[tool.coverage.run]
source = ["scvi"]
omit = [
    "**/test_*.py",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
xfail_strict = true


[tool.black]
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''

[tool.ruff]
src = ["."]
line-length = 119
target-version = "py38"
select = [
    "F",  # Errors detected by Pyflakes
    "E",  # Error detected by Pycodestyle
    "W",  # Warning detected by Pycodestyle
    "I",  # isort
    "D",  # pydocstyle
    "B",  # flake8-bugbear
    "TID",  # flake8-tidy-imports
    "C4",  # flake8-comprehensions
    "BLE",  # flake8-blind-except
    "UP",  # pyupgrade
    "RUF100",  # Report unused noqa directives
]
ignore = [
    # line too long -> we accept long comment lines; black gets rid of long code lines
    "E501",
    # Do not assign a lambda expression, use a def -> lambda expression assignments are convenient
    "E731",
    # allow I, O, l as variable names -> I is the identity matrix
    "E741",
    # Missing docstring in public package
    "D104",
    # Missing docstring in public module
    "D100",
    # Missing docstring in __init__
    "D107",
    # Errors from function calls in argument defaults. These are fine when the result is immutable.
    "B008",
    # __magic__ methods are are often self-explanatory, allow missing docstrings
    "D105",
    # first line should end with a period [Bug: doesn't work with single-line docstrings]
    "D400",
    # First line should be in imperative mood; try rephrasing
    "D401",
    ## Disable one in each pair of mutually incompatible rules
    # We donâ€™t want a blank line before a class docstring
    "D203",
    # We want docstrings to start immediately after the opening triple quote
    "D213",
    # Missing argument description in the docstring TODO: enable
    "D417",
]

[tool.ruff.pydocstyle]
convention = "numpy"

[tool.ruff.per-file-ignores]
"docs/*" = ["I", "BLE001"]
"tests/*" = ["D"]
"*/__init__.py" = ["F401"]
"scvi/__init__.py" = ["I"]

[tool.jupytext]
formats = "ipynb,md"
