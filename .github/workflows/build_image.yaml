name: build image

on:
  workflow_call:
    inputs:
      version:
        description: "latest/stable/semver/branch"
        required: true
        type: string
      dependencies:
        description: "optional dependencies"
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash -e {0} # -e to fail on error

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set build inputs
        id: build
        run: |
          INPUT_VERSION=${{ inputs.version }}
          VERSION=${INPUT_VERSION:-"latest"}
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

          VERSIONTAG=${VERSION}
          if [[ $VERSIONTAG == "cuda" ]]; then
            VERSIONTAG=""
          else
            VERSIONTAG="-${VERSIONTAG}"
          fi
          echo "versiontag=${VERSIONTAG}" >> $GITHUB_OUTPUT

          RELEASE_BRANCH_REGEX="([0-9]+\.){2}(x)"
          if [[ $VERSION == "latest" ]]; then
            TARGET="latest"
          elif [[ $VERSION == "stable" ]]; then
            TARGET="stable"
          elif [[ $VERSION =~ $RELEASE_BRANCH_REGEX ]]; then
            TARGET="branch"
          elif [[ $VERSION == "cuda" ]]; then
            TARGET="base"
          else
            TARGET="semver"
          fi
          echo "target=${TARGET}" >> $GITHUB_OUTPUT

          INPUT_DEPENDENCIES=${{ inputs.dependencies }}
          DEPENDENCIES=${INPUT_DEPENDENCIES:-"runtime"}
          echo "dependencies=${DEPENDENCIES}" >> $GITHUB_OUTPUT

      - uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          cache-from: type=registry,ref=scverse/scvi-tools:buildcache
          cache-to: type=inline,ref=scverse/scvi-tools:buildcache
          target: ${{ steps.build.outputs.target }}
          tags: ghcr.io/scverse/scvi-tools:py3.11-cu12-${{ steps.build.outputs.dependencies }}${{ steps.build.outputs.versiontag }}
          build-args: |
            PYTHON_VERSION=${{ inputs.python }}
            CUDA_VERSION=${{ inputs.cuda }}
            SCVI_TOOLS_VERSION=${{ steps.build.outputs.version }}
            DEPENDENCIES=${{ inputs.dependencies }}
