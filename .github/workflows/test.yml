# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: scvi-tools

on:
    push:
        branches: [main, 0.15.x, 0.16.x, 0.17.x, 0.18.x, 0.19.x, 0.20.x]
    pull_request:
        branches: [main, 0.15.x, 0.16.x, 0.17.x, 0.18.x, 0.19.x, 0.20.x]

jobs:
    test:
        runs-on: ${{ matrix.os }}
        timeout-minutes: 20
        defaults:
            run:
                shell: bash -e {0} # -e to fail on error

        strategy:
            fail-fast: false
            matrix:
                python: ["3.8", "3.9", "3.10"]
                os: [ubuntu-latest]

        env:
            OS: ${{ matrix.os }}
            PYTHON: ${{ matrix.python }}

        steps:
            - uses: actions/checkout@v2
            - name: Set up Python ${{ matrix.python }}
              uses: actions/setup-python@v2
              with:
                  python-version: ${{ matrix.python }}

            - name: Get pip cache dir
              id: pip-cache-dir
              run: |
                  echo "::set-output name=dir::$(pip cache dir)"
            - name: Restore pip cache
              uses: actions/cache@v2
              with:
                  path: ${{ steps.pip-cache-dir.outputs.dir }}
                  key: pip-${{ runner.os }}-${{ env.pythonLocation }}-${{ hashFiles('**/pyproject.toml') }}
                  restore-keys: |
                      pip-${{ runner.os }}-${{ env.pythonLocation }}-
            - name: Install test dependencies
              run: |
                  python -m pip install --upgrade pip wheel
                  pip install codecov
            - name: Install dependencies
              run: |
                  pip install ".[dev,pymde,autotune,hub]"
            - name: Test
              env:
                  MPLBACKEND: agg
                  PLATFORM: ${{ matrix.os }}
                  DISPLAY: :42
              run: |
                  pytest -v --cov --color=yes
            - name: Upload coverage
              env:
                  CODECOV_NAME: ${{ matrix.python }}-${{ matrix.os }}
              run: |
                  codecov --required --flags=unittests
